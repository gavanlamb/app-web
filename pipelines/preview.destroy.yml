name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: expensely

trigger:
  batch: false
  branches:
    include:
      - main

pr: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: pullRequestNumber
    displayName: Number of the pull request
    type: number
    default: 0

stages:
  - stage: preview
    displayName: Preview
    variables:
      - template: variables/preview.ap-southeast-2.yml@templates
    jobs:
      - job: setup
        displayName: Setup
        steps:
          - checkout: none
          - task: PowerShell@2
            displayName: Set variables
            name: set_variables
            inputs:
              targetType: inline
              script: |
                if(${{parameters.pullRequestNumber}} -gt 0) {
                  write-host("##vso[task.setvariable variable=PULL_REQUEST_ID;isOutput=true]${{parameters.pullRequestNumber}}")
                  write-host("##vso[task.setvariable variable=DESTROY;isOutput=true]true")
                } else {
                  echo "$(Build.SourceVersionMessage)"
                  $found = "$(Build.SourceVersionMessage)" -match '\(\#([0-9]*)\)'
                  if ($found) {
                    $pullRequestNumber = $matches[1]
                    write-host("Identifier:$pullRequestNumber")
                    write-host("##vso[task.setvariable variable=PULL_REQUEST_ID;isOutput=true]$pullRequestNumber")
                    Try {
                      $url = "https://$pullRequestNumber.preview.expensely.app/index.html"
                      write-host("Url: $url")
                      $req = Invoke-WebRequest $url -UseBasicParsing
                      $statusCode = $($req.StatusCode) -as [int]
                      write-host("Status code: $statusCode")
                      if($statusCode -gt 0)
                      {
                        write-host("##vso[task.setvariable variable=DESTROY;isOutput=true]true")
                      }
                    } Catch {
                      write-host $_.Exception.Message
                      write-host("##vso[task.setvariable variable=DESTROY;isOutput=true]false")
                    }
                  } else {
                    write-host("##vso[task.setvariable variable=DESTROY;isOutput=true]false")
                  }
                }

      - deployment: destroy
        displayName: Destroy
        dependsOn:
          - setup
        variables:
          PULL_REQUEST_ID: $[ dependencies.setup.outputs['set_variables.PULL_REQUEST_ID'] ]
          DESTROY: $[ dependencies.setup.outputs['set_variables.DESTROY'] ]
        condition: and(succeeded(), eq(variables.DESTROY, true))
        environment: preview
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: aws/iam/configure.yml@templates
                - task: PowerShell@2
                  displayName: Delete bucket contents
                  inputs:
                    targetType: inline
                    script: |
                      $url="$(PULL_REQUEST_ID).preview.expensely.app"
                      write-host($url)
                      Get-S3Object -BucketName $url | Remove-S3Object -Force
                    errorActionPreference: stop
                    showWarnings: true
                    pwsh: true
                - template: terraform/destroy.yml@templates
                  parameters:
                    destroyAdditionalArguments: -var-file=variables/${{ variables.ENVIRONMENT }}.${{ variables.REGION }}.tfvars -var="domain_name=$(PULL_REQUEST_ID).preview.expensely.app" -var="cognito_allowed_oauth_scopes=[]" -var="cognito_app_client_name=web app preview$(PULL_REQUEST_ID)" -var="cognito_postman_client_name=postman preview$(PULL_REQUEST_ID)"
                    workspaceName: expensely-web-app-preview$(PULL_REQUEST_ID)
