parameters:
  - name: artifactName
    displayName: Terraform artifact name
    type: string
  - name: bucketName
    displayName: Name of bucket to deploy to
    type: string
  - name: environment
    displayName: Environment to deploy to
    type: string
  - name: region
    displayName: Name of AWS region to deploy into
    type: string

jobs:
  - job: build
    displayName: Build
    steps:
      - template: build.yml
        parameters:
          environment: ${{ parameters.environment }}

  - job: plan
    displayName: Plan
    dependsOn:
      - build
    steps:
      - template: aws/iam/configure.yml@templates
      - template: terraform/plan.yml@templates
        parameters:
          artifactName: ${{ parameters.artifactName }}
          planAdditionalCommandOptions: -var-file="variables/${{ parameters.environment }}.${{ parameters.region }}.tfvars"
          workspaceName: expensely-web-app-${{ parameters.environment }}

  - template: azure-devops/approve.yml@templates
    parameters:
      dependsOn: plan
      timeoutInMinutes: 60
      userToNotify: '[Expensely]\Expensely Team'

  - deployment: deploy
    displayName: Deploy
    dependsOn: approve
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              displayName: Download build artifact
              inputs:
                buildType: current
                artifactName: build.${{ parameters.environment }}.$(Build.BuildNumber)
            - task: ExtractFiles@1
              displayName: Extract Archive
              inputs:
                archiveFilePatterns: $(Pipeline.Workspace)/build.tar.gz
                destinationFolder: $(Pipeline.Workspace))/web-app
                cleanDestinationFolder: true
            - template: aws/iam/configure.yml@templates
            - template: terraform/apply.yml@templates
              parameters:
                artifactName: ${{ parameters.artifactName }}
            - task: PowerShell@2
              displayName: Sync website
              inputs:
                targetType: inline
                script: |
                  aws s3 sync . s3://${{ parameters.bucketName }} --delete --exact-timestamps --region ${{ parameters.region }}
                errorActionPreference: default
                showWarnings: true
                pwsh: true
                workingDirectory: $(Pipeline.Workspace))/web-app
