name: 1.0$(Rev:.r)
resources:
  repositories:
    - repository: templates
      type: github
      name: expensely/azure-devops-templates
      endpoint: Expensely

pool:
  vmImage: ubuntu-latest

trigger: none

pr:
  branches:
    include:
      - 'main'

stages:
  - stage: preview
    displayName: Preview
    variables:
      - template: variables/preview.ap-southeast-2.yml@templates
    jobs:
      - job: build
        displayName: Build
        steps:
          - template: templates/build.yml
            parameters:
              environment: ${{ variables.ENVIRONMENT }}

      - job: plan
        displayName: Plan
        dependsOn:
          - build
        steps:
          - template: aws/iam/configure.yml@templates
          - template: templates/cognito.get-allscopes.yml
            parameters:
              region: ${{ variables.REGION }}
              userPoolId: ${{ variables.COGNITO_USER_POOL_ID }}
          - template: terraform/plan.yml@templates
            parameters:
              artifactName: ${{ variables.TF_ARTIFACT_NAME }}
              planAdditionalCommandOptions: -var-file="variables/${{ variables.ENVIRONMENT }}.${{ variables.REGION }}.tfvars" -var="domain_name=$(System.PullRequest.PullRequestNumber).preview.expensely.app" -var="cognito_app_client_name=web app preview$(System.PullRequest.PullRequestNumber)" -var="cognito_allowed_oauth_scopes=$(SCOPES)" -var="cognito_postman_client_name=postman ${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)"
              workspaceName: expensely-web-app-${{ variables.ENVIRONMENT }}$(System.PullRequest.PullRequestNumber)

      - deployment: deploy
        displayName: Deploy
        dependsOn: plan
        environment: Preview
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - download: current
                  artifact: build.${{ variables.ENVIRONMENT }}.$(Build.BuildNumber)
                - task: ExtractFiles@1
                  displayName: Extract Archive
                  inputs:
                    archiveFilePatterns: $(Pipeline.Workspace)/build.tar.gz
                    destinationFolder: $(Pipeline.Workspace))/web-app
                    cleanDestinationFolder: true
                - template: aws/iam/configure.yml@templates
                - template: terraform/apply.yml@templates
                  parameters:
                    artifactName: ${{ variables.TF_ARTIFACT_NAME }}
                - task: PowerShell@2
                  displayName: Sync website
                  inputs:
                    targetType: inline
                    script: | 
                      aws s3 sync . s3://$(System.PullRequest.PullRequestNumber).preview.expensely.app --delete --exact-timestamps --region ${{ variables.REGION }}
                    errorActionPreference: default
                    showWarnings: true
                    pwsh: true
                    workingDirectory: $(Pipeline.Workspace))/web-app
